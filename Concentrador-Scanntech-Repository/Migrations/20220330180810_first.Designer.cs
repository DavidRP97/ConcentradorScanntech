// <auto-generated />
using System;
using Concentrador_Scanntech_Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Concentrador_Scanntech_Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220330180810_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Definicoes.DefinicoesScanntech", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataDeIntegração")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EstadoDaPromocao")
                        .HasColumnType("integer");

                    b.Property<string>("HorarioDeEnvioFechamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdCompanhia")
                        .HasColumnType("integer");

                    b.Property<int>("IdLocal")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeDeEnviosParaScanntech")
                        .HasColumnType("integer");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SincronizacaoManual")
                        .HasColumnType("integer");

                    b.Property<int>("SincronizacaoPromocoes")
                        .HasColumnType("integer");

                    b.Property<int>("SincronizacaoVendas")
                        .HasColumnType("integer");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DefinicoesScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Definicoes.Status", b =>
                {
                    b.Property<long>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("StatusId"));

                    b.Property<bool>("StatusDoBanco")
                        .HasColumnType("boolean");

                    b.HasKey("StatusId");

                    b.ToTable("StatusDoBanco");

                    b.HasData(
                        new
                        {
                            StatusId = 1L,
                            StatusDoBanco = true
                        });
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Definicoes.URL", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("DefinicoesScanntechId")
                        .HasColumnType("bigint");

                    b.Property<string>("UrlConnection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DefinicoesScanntechId");

                    b.ToTable("URLs");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioArtigoScanntech", b =>
                {
                    b.Property<long>("ArtigoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ArtigoId"));

                    b.Property<long?>("BeneficioItemScanntechBeneficioItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoDeBarras")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ArtigoId");

                    b.HasIndex("BeneficioItemScanntechBeneficioItemId");

                    b.ToTable("BeneficioArtigoScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioItemScanntech", b =>
                {
                    b.Property<long>("BeneficioItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BeneficioItemId"));

                    b.Property<long?>("BeneficioScanntechBeneficioId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("BeneficioItemId");

                    b.HasIndex("BeneficioScanntechBeneficioId");

                    b.ToTable("BeneficioItemScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioScanntech", b =>
                {
                    b.Property<long>("BeneficioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BeneficioId"));

                    b.HasKey("BeneficioId");

                    b.ToTable("BeneficioScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoArtigoScanntech", b =>
                {
                    b.Property<long>("ArtigoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ArtigoId"));

                    b.Property<string>("CodigoDeBarras")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("CondicaoItemScanntechCondicaoItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ArtigoId");

                    b.HasIndex("CondicaoItemScanntechCondicaoItemId");

                    b.ToTable("CondicaoArtigoScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoItemScanntech", b =>
                {
                    b.Property<long>("CondicaoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CondicaoItemId"));

                    b.Property<long?>("CondicaoScanntechCondicaoId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("CondicaoItemId");

                    b.HasIndex("CondicaoScanntechCondicaoId");

                    b.ToTable("CondicaoItemScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoScanntech", b =>
                {
                    b.Property<long>("CondicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CondicaoId"));

                    b.HasKey("CondicaoId");

                    b.ToTable("CondicaoScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.DetalhesPromocaoScanntech", b =>
                {
                    b.Property<long>("DetalhePromocaoScanntechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DetalhePromocaoScanntechId"));

                    b.Property<long?>("BeneficioScanntechId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CondicaoScanntechId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PrecoValorFixo")
                        .HasColumnType("numeric");

                    b.Property<int?>("QuantidadeItensLevaEPaga")
                        .HasColumnType("integer");

                    b.HasKey("DetalhePromocaoScanntechId");

                    b.HasIndex("BeneficioScanntechId");

                    b.HasIndex("CondicaoScanntechId");

                    b.ToTable("DetalhesPromocaoScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.PromocaoScanntech", b =>
                {
                    b.Property<long>("PromocaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PromocaoId"));

                    b.Property<long>("ApiId")
                        .HasColumnType("bigint");

                    b.Property<bool>("CargaPdv")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataEnvioPdv")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DetalhePromocaoScanntechId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LimiteDePromocoesPorTicket")
                        .HasColumnType("integer");

                    b.Property<string>("TipoPromocao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VigenciaAte")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("VigenciaDe")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PromocaoId");

                    b.HasIndex("DetalhePromocaoScanntechId");

                    b.ToTable("PromocoesScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Definicoes.URL", b =>
                {
                    b.HasOne("Concentrador_Scanntech_Entities.Model.Definicoes.DefinicoesScanntech", null)
                        .WithMany("uRLs")
                        .HasForeignKey("DefinicoesScanntechId");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioArtigoScanntech", b =>
                {
                    b.HasOne("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioItemScanntech", null)
                        .WithMany("Artigos")
                        .HasForeignKey("BeneficioItemScanntechBeneficioItemId");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioItemScanntech", b =>
                {
                    b.HasOne("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioScanntech", null)
                        .WithMany("BeneficioItens")
                        .HasForeignKey("BeneficioScanntechBeneficioId");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoArtigoScanntech", b =>
                {
                    b.HasOne("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoItemScanntech", null)
                        .WithMany("Artigos")
                        .HasForeignKey("CondicaoItemScanntechCondicaoItemId");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoItemScanntech", b =>
                {
                    b.HasOne("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoScanntech", null)
                        .WithMany("CondicoesItens")
                        .HasForeignKey("CondicaoScanntechCondicaoId");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.DetalhesPromocaoScanntech", b =>
                {
                    b.HasOne("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioScanntech", "BeneficioScanntech")
                        .WithMany()
                        .HasForeignKey("BeneficioScanntechId");

                    b.HasOne("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoScanntech", "CondicaoScanntech")
                        .WithMany()
                        .HasForeignKey("CondicaoScanntechId");

                    b.Navigation("BeneficioScanntech");

                    b.Navigation("CondicaoScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.PromocaoScanntech", b =>
                {
                    b.HasOne("Concentrador_Scanntech_Entities.Model.Promocoes.DetalhesPromocaoScanntech", "DetalhePromocaoScanntech")
                        .WithMany()
                        .HasForeignKey("DetalhePromocaoScanntechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetalhePromocaoScanntech");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Definicoes.DefinicoesScanntech", b =>
                {
                    b.Navigation("uRLs");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioItemScanntech", b =>
                {
                    b.Navigation("Artigos");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.BeneficioScanntech", b =>
                {
                    b.Navigation("BeneficioItens");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoItemScanntech", b =>
                {
                    b.Navigation("Artigos");
                });

            modelBuilder.Entity("Concentrador_Scanntech_Entities.Model.Promocoes.CondicaoScanntech", b =>
                {
                    b.Navigation("CondicoesItens");
                });
#pragma warning restore 612, 618
        }
    }
}
